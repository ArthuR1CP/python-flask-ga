name: CI/CD - Python App

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
          # Set up cache for pip
    - name: Get pip cache dir
      run: echo "PIP_CACHE_DIR=$(pip cache dir)" >> $GITHUB_ENV

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ${{ env.PIP_CACHE_DIR }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Application Tests
      run: |
        export PYTHONPATH=src
        python tests/test_application.py

    # Install AWS CLI v2 & EB
    - name: Install AWS CLI v2
      run: |
        # Check if AWS CLI is installed
        if aws --version > /dev/null 2>&1; then
          echo "AWS CLI is already installed. Upgrading..."
          sudo apt-get update && sudo apt-get install --only-upgrade awscli
        else
          echo "Installing AWS CLI v2..."
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
        fi
        aws --version

        # Install EB CLI
        python -m pip install --upgrade pip
        pip install awsebcli --upgrade
        eb --version

    # # Elastic Beanstalk CLI version
    # - name: Install AWS CLI & EB CLI
    #   run: |
    #     sudo apt-get update && sudo apt-get install -y awscli
    #     pip install awsebcli --upgrade
    #     aws --version
    #     eb --version



    # AWS Credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-3

    # Create the Elastic Beanstalk application
    - name: Deploy to AWS Elastic Beanstalk
      run: |
        eb init -p python-3.8 hw_app --region eu-west-3
        if eb status test-environment; then
          eb deploy
        else
          eb create test-environment
        fi
